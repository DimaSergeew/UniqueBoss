package org.bedepay.uniqueboss.data;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.plugin.Plugin;
import org.bukkit.scheduler.BukkitRunnable;
import org.bedepay.uniqueboss.boss.UniqueBossManager;
import org.bedepay.uniqueboss.config.ConfigManager;

import java.io.File;
import java.io.IOException;

public class BossDataManager {
    
    private final Plugin plugin;
    private final File dataFile;
    private FileConfiguration dataConfig;
    
    public BossDataManager(Plugin plugin) {
        this.plugin = plugin;
        this.dataFile = new File(plugin.getDataFolder(), "boss_data.yml");
        loadDataFile();
    }
    
    private void loadDataFile() {
        if (!dataFile.exists()) {
            try {
                dataFile.getParentFile().mkdirs();
                dataFile.createNewFile();
            } catch (IOException e) {
                plugin.getLogger().severe("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –±–æ—Å—Å–∞: " + e.getMessage());
            }
        }
        dataConfig = YamlConfiguration.loadConfiguration(dataFile);
    }
    
    private void saveDataFile() {
        try {
            dataConfig.save(dataFile);
        } catch (IOException e) {
            plugin.getLogger().severe("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –±–æ—Å—Å–∞: " + e.getMessage());
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –±–æ—Å—Å–µ
     */
    public boolean hasSavedBossData() {
        return dataConfig.getBoolean("boss.active", false);
    }
    
    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –±–æ—Å—Å–∞
     */
    public void saveBossData() {
        if (!UniqueBossManager.isBossActive()) {
            return;
        }
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Å—Å–∞
            Location bossLoc = UniqueBossManager.getCurrentBoss().getEntity().getLocation();
            int phase = UniqueBossManager.getCurrentBoss().getCurrentPhase();
            double health = ((org.bukkit.entity.LivingEntity) UniqueBossManager.getCurrentBoss().getEntity()).getHealth();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥
            dataConfig.set("boss.active", true);
            dataConfig.set("boss.world", bossLoc.getWorld().getName());
            dataConfig.set("boss.x", bossLoc.getX());
            dataConfig.set("boss.y", bossLoc.getY());
            dataConfig.set("boss.z", bossLoc.getZ());
            dataConfig.set("boss.yaw", bossLoc.getYaw());
            dataConfig.set("boss.pitch", bossLoc.getPitch());
            dataConfig.set("boss.phase", phase);
            dataConfig.set("boss.health", health);
            dataConfig.set("boss.save_time", System.currentTimeMillis());
            
            saveDataFile();
            plugin.getLogger().info("–î–∞–Ω–Ω—ã–µ –±–æ—Å—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
            
        } catch (Exception e) {
            plugin.getLogger().severe("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –±–æ—Å—Å–∞: " + e.getMessage());
        }
    }
    
    /**
     * –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Å—Å–∞ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    public void restoreBoss(ConfigManager config) {
        if (!hasSavedBossData()) {
            return;
        }
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            String worldName = dataConfig.getString("boss.world");
            double x = dataConfig.getDouble("boss.x");
            double y = dataConfig.getDouble("boss.y");
            double z = dataConfig.getDouble("boss.z");
            float yaw = (float) dataConfig.getDouble("boss.yaw");
            float pitch = (float) dataConfig.getDouble("boss.pitch");
            int savedPhase = dataConfig.getInt("boss.phase", 1);
            double savedHealth = dataConfig.getDouble("boss.health");
            long saveTime = dataConfig.getLong("boss.save_time");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ –¥–∞–≤–Ω–æ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–æ—Å—Å (–Ω–µ –±–æ–ª–µ–µ 1 —á–∞—Å–∞)
            long timeDiff = System.currentTimeMillis() - saveTime;
            if (timeDiff > 3600000) { // 1 —á–∞—Å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
                plugin.getLogger().info("–î–∞–Ω–Ω—ã–µ –±–æ—Å—Å–∞ —É—Å—Ç–∞—Ä–µ–ª–∏ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –±–æ–ª–µ–µ —á–∞—Å–∞ –Ω–∞–∑–∞–¥). –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ.");
                clearBossData();
                return;
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –º–∏—Ä
            World world = Bukkit.getWorld(worldName);
            if (world == null) {
                plugin.getLogger().warning("–ú–∏—Ä " + worldName + " –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Å—Å–∞.");
                clearBossData();
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞—Ü–∏—é
            Location spawnLoc = new Location(world, x, y, z, yaw, pitch);
            
            // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Å—Å–∞
            new BukkitRunnable() {
                @Override
                public void run() {
                    try {
                        // –°–ø–∞–≤–Ω–∏–º –±–æ—Å—Å–∞
                        UniqueBossManager.spawnBoss(spawnLoc, config);
                        
                        // –ñ–¥–µ–º –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Å—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è
                        new BukkitRunnable() {
                            @Override
                            public void run() {
                                if (UniqueBossManager.isBossActive()) {
                                    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
                                    org.bukkit.entity.LivingEntity bossEntity = 
                                        (org.bukkit.entity.LivingEntity) UniqueBossManager.getCurrentBoss().getEntity();
                                    bossEntity.setHealth(Math.min(savedHealth, bossEntity.getMaxHealth()));
                                    
                                    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–∑—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                                    if (savedPhase > 1) {
                                        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–º–µ–Ω—ã —Ñ–∞–∑—ã
                                        // –ü–æ–∫–∞ —á—Ç–æ –±–æ—Å—Å —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Ñ–∞–∑—É –ø–æ –∑–¥–æ—Ä–æ–≤—å—é
                                    }
                                    
                                    plugin.getLogger().info("–ë–æ—Å—Å —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! " +
                                        "–§–∞–∑–∞: " + savedPhase + ", –ó–¥–æ—Ä–æ–≤—å–µ: " + savedHealth);
                                    
                                    // –û–±—ä—è–≤–ª—è–µ–º –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–æ—Å—Å–∞
                                    for (org.bukkit.entity.Player player : Bukkit.getOnlinePlayers()) {
                                        player.sendMessage(org.bukkit.ChatColor.GOLD + 
                                            "üîÑ –¢–µ–º–Ω—ã–π –ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞!");
                                        player.sendMessage(org.bukkit.ChatColor.RED + 
                                            "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: " + org.bukkit.ChatColor.YELLOW + worldName + 
                                            org.bukkit.ChatColor.GRAY + " [" + org.bukkit.ChatColor.WHITE + 
                                            (int)x + ", " + (int)y + ", " + (int)z + org.bukkit.ChatColor.GRAY + "]");
                                    }
                                    
                                    // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                                    clearBossData();
                                } else {
                                    plugin.getLogger().warning("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Å—Å–∞ - —Å–ø–∞–≤–Ω –Ω–µ —É–¥–∞–ª—Å—è");
                                    clearBossData();
                                }
                            }
                        }.runTaskLater(plugin, 20L); // –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É
                        
                    } catch (Exception e) {
                        plugin.getLogger().severe("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–æ—Å—Å–∞: " + e.getMessage());
                        clearBossData();
                    }
                }
            }.runTaskLater(plugin, 60L); // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
            
        } catch (Exception e) {
            plugin.getLogger().severe("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–æ—Å—Å–∞: " + e.getMessage());
            clearBossData();
        }
    }
    
    /**
     * –û—á–∏—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–æ—Å—Å–∞
     */
    public void clearBossData() {
        dataConfig.set("boss", null);
        saveDataFile();
        plugin.getLogger().info("–î–∞–Ω–Ω—ã–µ –±–æ—Å—Å–∞ –æ—á–∏—â–µ–Ω—ã.");
    }
} 